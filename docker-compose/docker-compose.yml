services:
  masierp:
    image: masierp
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED=true
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_R2DBC_URL=r2dbc:postgresql://masierp-postgresql:5432/MasiERP
      - SPRING_LIQUIBASE_URL=jdbc:postgresql://masierp-postgresql:5432/MasiERP
      - SPRING_ELASTICSEARCH_URIS=http://masierp-elasticsearch:9200
    ports:
      - "8080:8080"
    healthcheck:
      test:
        - CMD
        - curl
        - "-f"
        - http://localhost:8080/management/health
      interval: 5s
      timeout: 5s
      retries: 40
    depends_on:
      masierp-postgresql:
        condition: service_healthy
      masierp-elasticsearch:
        condition: service_healthy
  masierp-postgresql:
    image: postgres:16.1
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_USER=MasiERP
      - POSTGRES_PASSWORD=
      - POSTGRES_HOST_AUTH_METHOD=trust
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U $${POSTGRES_USER}
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - 127.0.0.1:5432:5432
  masierp-elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.4
    environment:
      - ES_JAVA_OPTS=-Xms256m -Xmx256m
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - 127.0.0.1:9200:9200
      - 127.0.0.1:9300:9300
    healthcheck:
      test:
        - CMD
        - curl
        - "-f"
        - http://localhost:9200/_cluster/health?wait_for_status=green&timeout=10s
      interval: 5s
      timeout: 10s
      retries: 10

  consul:
    image: docker.io/bitnami/consul:1.17.0
    ports:
      - 8300:8300
      - 8500:8500
      - 8600:8600
    command: consul agent -dev -ui -client 0.0.0.0 -log-level=INFO
  consul-config-loader:
    image: jhipster/consul-config-loader:v0.4.1
    volumes:
      - ./central-server-config:/config
    environment:
      - INIT_SLEEP_SECONDS=5
      - CONSUL_URL=consul
      - CONSUL_PORT=8500

  prometheus:
    image: prom/prometheus:v2.48.0
    volumes:
      - ./prometheus-conf/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - 9090:9090
  alertmanager:
    image: prom/alertmanager:v0.26.0
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager-conf/:/etc/alertmanager/
    command:
      - "--config.file=/etc/alertmanager/config.yml"
      - "--storage.path=/alertmanager"

  grafana:
    image: grafana/grafana:10.2.2
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false

volumes:
  prometheus_data: {}
  grafana_data: {}
